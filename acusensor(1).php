<?PHP
if (strtolower(basename($_SERVER["SCRIPT_FILENAME"])) === strtolower(basename(__FILE__))) { header("HTTP/1.0 404 Not found"); die(); } $_ENV['_AAS0'] =  (isset($_SERVER["HTTP_ACUNETIX_ASPECT"]) && $_SERVER["HTTP_ACUNETIX_ASPECT"] === "enabled"); if($_ENV['_AAS0']){ $_ENV['_AAS0'] = false; if(isset($_SERVER["HTTP_ACUNETIX_ASPECT_PASSWORD"])){ $_AAS1 = fopen(__FILE__, 'r'); fseek($_AAS1, -32, SEEK_END); $_ENV["_AAS2"] = stream_get_contents($_AAS1, 32); unset($_AAS1); $_ENV['_AAS0'] = $_SERVER["HTTP_ACUNETIX_ASPECT_PASSWORD"] === $_ENV["_AAS2"]; } } if ($_ENV['_AAS0']) { if (!defined("T_ML_COMMENT")) { define("T_ML_COMMENT", T_COMMENT); } else { define("T_DOC_COMMENT", T_ML_COMMENT); } define("_AAS3", extension_loaded('mbstring')); define("_AAS4", (int)ini_get('mbstring.func_overload')); if (!defined("T_FILE")) define("T_FILE", 365); if (!defined("T_DIR")) define("T_DIR", 379); if (!defined("E_RECOVERABLE_ERROR")) { define("E_RECOVERABLE_ERROR", 4096); } define("_AAS5", base64_decode("PCEtLUFDVUFTUEVDVDo=") ); define("_AAS6", base64_decode("LS0+") ); define("_AAS7", "ACUSTART"); define("_AAS8", "ACUEND"); define("_AAS9", "04b5f574a8c0ecaefa51662e77efc947"); $_ENV['_AAS10'] = '2'; $_ENV["_AAS11"] = ""; $_ENV["_AAS12"] = ""; $_ENV["_AAS13"] = array(); $_ENV["_AAS14"] = array("\$_GET" => array("GET"), "\$_POST" => array("POST"), "\$_COOKIE" => array("Cookie"), "\$_REQUEST" => array("ANY")); $_ENV["_AAS15"] = array( "mysqli_query" => array("SQL_Query", array(2), false, "database=mysql"), "mysqli_real_query" => array("SQL_Query", array(2), false, "database=mysql"), "mysqli_multi_query" => array("SQL_Query", array(2), false, "database=mysql"), "mysqli_prepare" => array("SQL_Query", array(2), false, "database=mysql"), "mysqli_stmt_prepare" => array("SQL_Query", array(2), false, "database=mysql"), "mysql_query" => array("SQL_Query", array(1), false, "database=mysql"), "mysql_unbuffered_query" => array("SQL_Query", array(1), false, "database=mysql"), "mysql_db_query" => array("SQL_Query", array(2), false, "database=mysql"), "pg_query_params" => array("SQL_Query", array(1, 2), false, "database=pg"), "pg_query" => array("SQL_Query", array(1, 2), false, "database=pg"), "pg_prepare" => array("SQL_Query", array(2, 3), false, "database=pg"), "pg_send_query_params" => array("SQL_Query", array(2), false, "database=pg"), "pg_send_query" => array("SQL_Query", array(2), false, "database=pg"), "pg_send_prepare" => array("SQL_Query", array(3), false, "database=pg"), "mssql_query" => array("SQL_Query", array(1), false, "database=mssql"), "sqlsrv_prepare" => array("SQL_Query", array(2), false, "database=mssql"), "sqlsrv_query" => array("SQL_Query", array(2), false, "database=mssql"), "maxdb_query" => array("SQL_Query", array(2), false, "database=mysql"), "maxdb_multi_query" => array("SQL_Query", array(2), false, "database=mysql"), "maxdb_stmt_prepare" => array("SQL_Query", array(2), false, "database=mysql"), "maxdb_prepare" => array("SQL_Query", array(2), false, "database=mysql"), "maxdb_real_query" => array("SQL_Query", array(2), false, "database=mysql"), "sesam_query" => array("SQL_Query", array(1), false), "db2_exec" => array("SQL_Query", array(2), false), "ingres_query" => array("SQL_Query", array(1), false), "ifx_query" => array("SQL_Query", array(1), false), "ifx_prepare" => array("SQL_Query", array(1), false), "oci_parse" => array("SQL_Query", array(2), false, "database=oracle"), "ora_parse" => array("SQL_Query", array(2), false, "database=oracle"), "ociparse" => array("SQL_Query", array(2), false, "database=oracle"), "ibase_query" => array("SQL_Query", array(1, 2), false), "ibase_prepare" => array("SQL_Query", array(1, 2, 3), false), "fbird_query" => array("SQL_Query", array(1, 2), false), "fbird_prepare" => array("SQL_Query", array(1, 2, 3), false), "msql_query" => array("SQL_Query", array(1), false), "msql_db_query" => array("SQL_Query", array(2), false), "dbx_query" => array("SQL_Query", array(2), false), "ora_do" => array("SQL_Query", array(2), false, "database=oracle"), "odbc_do" => array("SQL_Query", array(2), false), "odbc_exec" => array("SQL_Query", array(2), false), "odbc_prepare" => array("SQL_Query", array(2), false), "sybase_query" => array("SQL_Query", array(1), false, "database=sybase"), "fopen" => array("", array(), "_AAS16"), "readfile" => array("File_Open", array(1), false), "file" => array("File_Open", array(1), false), "file_get_contents" => array("File_Open", array(1), false), "highlight_file" => array("File_Open", array(1), false), "file_put_contents" => array("Create_File", array(1), false), "file_exists" => array("", array(), "_AAS17"), "is_file" => array("", array(), "_AAS17"), "system" => array("Sys_Command", array(1), false), "exec" => array("Sys_Command", array(1), false), "shell_exec" => array("Sys_Command", array(1), false), "passthru" => array("Sys_Command", array(1), false), "popen" => array("Sys_Command", array(1), false), "proc_open" => array("Sys_Command", array(1), false), "expect_popen" => array("Sys_Command", array(1), false), "mail" => array("Send_Mail", array(1, 2, 3, 4), false), "header" => array("Set_Header", array(1), "_AAS18"), "set_error_handler" => array("", array(), "_AAS19"), "get_included_files" => array("", array(), "_AAS20"), "unserialize" => array("Unserialize", array(1), false), "curl_exec" => array("", array(), "_AAS21"), "unlink" => array("Delete_File", array(1), false), "mkdir" => array("Create_File", array(1), false), "move_uploaded_file" => array("", array(), "_AAS22"), "rmdir" => array("Delete_File", array(1), false), "create_function" => array("Create_Function", array(1, 2), false), "fwrite" => array("", array(), "_AAS23"), "fputs" => array("", array(), "_AAS23"), "fprintf" => array("", array(), "_AAS23") ); $_ENV["_AAS24"] = array( "mysqli" => array( "query" => array("SQL_Query", array(1), "database=mysql"), "real_query" => array("SQL_Query", array(1), "database=mysql"), "multi_query" => array("SQL_Query", array(1), "database=mysql"), "prepare" => array("SQL_Query", array(1), "database=mysql") ), "mysqli_stmt" => array( "prepare" => array("SQL_Query", array(1), "database=mysql") ), "sqlite3" => array( "query" => array("SQL_Query", array(1)), "exec" => array("SQL_Query", array(1)), "prepare" => array("SQL_Query", array(1)), "querySingle" => array("SQL_Query", array(1)) ), "pdo" => array( "exec" => array("SQL_Query", array(1)), "query" => array("SQL_Query", array(1)), "prepare" => array("SQL_Query", array(1)) ), "maxdb" => array( "query" => array("SQL_Query", array(1)), "multi_query" => array("SQL_Query", array(1)), "prepare" => array("SQL_Query", array(1)) ), "maxdb_stmt" => array( "prepare" => array("SQL_Query", array(1)) ) ); $_ENV["_AAS25"] = array(); foreach ($_ENV["_AAS24"] as $_AAS26 => $_AAS27) { foreach ($_AAS27 as $_AAS28 => $_AAS29) { $_ENV["_AAS25"][$_AAS28] = true; } } $_ENV["_AAS30"] = array(); $_ENV["_AAS31"] = dirname($_SERVER["SCRIPT_FILENAME"]) . "/"; $_ENV["_AAS32"] = $_SERVER["SCRIPT_FILENAME"]; $_ENV["_AAS33"] = basename(__FILE__); if (!function_exists("sys_get_temp_dir")) { if (!empty($_ENV["TMP"])) { $_ENV["_AAS34"] = realpath($_ENV["TMP"]); } else if (!empty($_ENV["TMPDIR"])) { $_ENV["_AAS34"] = realpath($_ENV["TMPDIR"]); } else if (!empty($_ENV["TEMP"])) { $_ENV["_AAS34"] = realpath($_ENV["TEMP"]); } else { $_AAS35 = tempnam(md5(uniqid(rand(), false)), ""); if ($_AAS35) { $_AAS36 = realpath(dirname($_AAS35)); unlink($_AAS35); $_ENV["_AAS34"] = $_AAS36; } else { $_ENV["_AAS34"] = false; } } } else { $_ENV["_AAS34"] = sys_get_temp_dir(); } if (isset($_ENV["_AAS34"])) { $_ENV["_AAS34"] = str_replace("\\", "/", $_ENV["_AAS34"]); if (substr($_ENV["_AAS34"], -1) !== "/") $_ENV["_AAS34"] .= "/"; } else { _AAS37("unable to find a writable temporary folder"); } $_ENV["_AAS38"] = intval(ini_get("error_reporting")); $_ENV["_AAS39"] = array( E_ERROR => "Error", E_WARNING => "Warning", E_PARSE => "Parsing Error", E_NOTICE => "Notice", E_CORE_ERROR => "Core Error", E_CORE_WARNING => "Core Warning", E_COMPILE_ERROR => "Compile Error", E_COMPILE_WARNING => "Compile Warning", E_USER_ERROR => "User Error", E_USER_WARNING => "User Warning", E_USER_NOTICE => "User Notice", E_STRICT => "Runtime Notice", E_RECOVERABLE_ERROR => "Catchable Fatal Error" ); } function _AAS21($_AAS40, $_AAS41, $_AAS42, $_AAS43, $_AAS44) { if (count($_AAS43) > 0 && is_resource($_AAS43[0]) && defined("CURLINFO_EFFECTIVE_URL")) { $_AAS45 = curl_getinfo($_AAS43[0], CURLINFO_EFFECTIVE_URL); $_AAS46 = _AAS47(); if ($_AAS46 != "") $_AAS48 = array("\"$_AAS42\" was called.\r\n$_AAS46"); else $_AAS48 = array("\"$_AAS42\" was called."); _AAS49("CURL_Exec", array($_AAS45), $_AAS40, $_AAS41, $_AAS48); } return _AAS50($_AAS42, $_AAS43); } function _AAS17($_AAS40, $_AAS41, $_AAS42, $_AAS43, $_AAS44) { if (is_array($_AAS43) && count($_AAS43) == 1 && (strpos($_AAS43[0], _AAS7 . 'FILE') !== false || strpos($_AAS43[0], _AAS8 . 'FILE') !== false)) { if (strpos($_AAS43[0], _AAS7 . 'FILECREATE') !== false || strpos($_AAS43[0], _AAS8 . 'FILECREATE') !== false) return false; else return true; } else { return _AAS50($_AAS42, $_AAS43); } } function _AAS16($_AAS40, $_AAS41, $_AAS42, $_AAS43, $_AAS44) { $_AAS51 = $_AAS43[0]; $_AAS52 = $_AAS43[1]; $_AAS46 = _AAS47(); if ($_AAS46 != "") $_AAS48 = array("\"$_AAS42\" was called.\r\n$_AAS46"); else $_AAS48 = array("\"$_AAS42\" was called."); if (strpos($_AAS52, 'w') !== false || strpos($_AAS52, 'a') !== false || strpos($_AAS52, 'x') !== false) { _AAS49('Create_File', array($_AAS51), $_AAS40, $_AAS41, $_AAS48); } else { _AAS49('File_Open', array($_AAS51), $_AAS40, $_AAS41, $_AAS48); } if (!(strpos($_AAS43[0], _AAS7) !== false || strpos($_AAS43[0], _AAS8) !== false)) { $_AAS53 = _AAS50($_AAS42, $_AAS43); $_ENV["_AAS30"][(int)$_AAS53] = $_AAS51; return $_AAS53; } else { return false; } } function _AAS23($_AAS40, $_AAS41, $_AAS42, $_AAS43, $_AAS44) { $_AAS54 = $_ENV["_AAS30"][(int)$_AAS43[0]]; if (isset($_AAS54)) { if (strcasecmp($_AAS42, "fprintf") === 0) { $_AAS55 = array_shift($_AAS43); $_AAS56 = _AAS50("sprintf", $_AAS43); array_unshift($_AAS43, $_AAS55); } else { $_AAS56 = $_AAS43[1]; } $_AAS46 = _AAS47(); if ($_AAS46 != "") $_AAS48 = array("\"$_AAS42\" was called.\r\n$_AAS46"); else $_AAS48 = array("\"$_AAS42\" was called."); if (($_AAS57 = strpos($_AAS56, _AAS7)) !== false) { $_AAS56 = substr($_AAS56, $_AAS57, 512); _AAS49('File_Write', array($_AAS54, $_AAS56), $_AAS40, $_AAS41, $_AAS48); } elseif (($_AAS57 = strpos($_AAS56, _AAS8)) !== false) { $_AAS56 = substr($_AAS56, max(0, $_AAS57 - 512 + _AAS58(_AAS8)), 512); _AAS49('File_Write', array($_AAS54, $_AAS56), $_AAS40, $_AAS41, $_AAS48); } } return _AAS50($_AAS42, $_AAS43); } function _AAS20($_AAS40, $_AAS41, $_AAS42, $_AAS43, $_AAS44) { return ($_ENV['_AAS13']); } function _AAS59($_AAS40, $_AAS41, $_AAS42, $_AAS43, $_AAS44) { $_AAS60 = explode("::", $_AAS42, 2); if (count($_AAS60) !== 2) { return _AAS50($_AAS42, $_AAS43); } $_AAS61 = $_AAS60[1]; _AAS49("Route", array($_AAS61, $_AAS43[0]), $_AAS40, $_AAS41, "laravel"); return _AAS50($_AAS42, $_AAS43); } function _AAS22($_AAS40, $_AAS41, $_AAS42, $_AAS43, $_AAS44) { $_AAS53 = _AAS50($_AAS42, $_AAS43); if ($_AAS53 && ($_AAS62 = realpath($_AAS43[1])) !== false) { $_AAS62 = strtr($_AAS62, "\\", "/"); $_AAS46 = _AAS47(); $_AAS63 = strtr(realpath($_SERVER['DOCUMENT_ROOT']), "\\", "/"); if (substr($_AAS63, -1, 1) !== "/") $_AAS63 .= "/"; $_AAS64 = false; if (strpos($_AAS62, $_AAS63) === 0) { $_AAS64 = substr($_AAS62, _AAS58($_AAS63) - 1); } if ($_AAS64) { _AAS49('File_Upload', array($_AAS64), $_AAS40, $_AAS41, array("\"$_AAS62\" was uploaded (platform PHP).\r\n$_AAS46")); } else { _AAS49('Create_File', $_AAS43, $_AAS40, $_AAS41, array("\"$_AAS42\" was called.\r\n$_AAS46")); } } return $_AAS53; } function _AAS19($_AAS40, $_AAS41, $_AAS42, $_AAS43, $_AAS44) { _AAS65("$_AAS42 called from $_AAS40 line $_AAS41"); $_ENV['_AAS11'] = $_AAS43; return true; } function _AAS18($_AAS40, $_AAS41, $_AAS42, $_AAS43, $_AAS44) { if (stripos($_AAS43[0], "content-length") === false) { return _AAS66($_AAS40, $_AAS41, $_AAS42, $_AAS43, $_ENV['_AAS15'][$_AAS42]); } return true; } function _AAS67($_AAS68, $_AAS69, $_AAS70, $_AAS71) {  if ($_AAS68 != E_NOTICE && $_AAS68 != E_STRICT && $_AAS68 != E_WARNING && $_AAS68 != E_RECOVERABLE_ERROR) { _AAS65("Error: " . $_AAS69 . " Type: " . $_ENV['_AAS39'][$_AAS68] . " Line $_AAS71, File $_AAS70"); _AAS72(); } if ($_AAS68 == E_USER_ERROR || $_AAS68 == E_ERROR) _AAS72(); if (is_array($_ENV['_AAS11']) && count($_ENV['_AAS11']) > 0) { if (is_string($_ENV['_AAS11'][0]) && function_exists($_ENV['_AAS11'][0])) { if (!isset($_ENV['_AAS11'][1]) || ($_ENV['_AAS11'][1] & $_AAS68 != 0)) { $_AAS73 = func_get_args(); _AAS50($_ENV['_AAS11'][0], $_AAS73); } } elseif (is_array($_ENV['_AAS11'][0]) && is_object($_ENV['_AAS11'][0][0])) { if (!isset($_ENV['_AAS11'][1]) || ($_ENV['_AAS11'][1] & $_AAS68 != 0)) { $_AAS73 = func_get_args(); call_user_func_array(array($_ENV['_AAS11'][0][0], $_ENV['_AAS11'][0][1]), $_AAS73); } } } elseif (($_AAS68 & $_ENV["_AAS38"]) != 0) { switch ($_AAS68) { case E_USER_ERROR: case E_RECOVERABLE_ERROR: case E_ERROR: echo "<b>Fatal error</b>: $_AAS69 in <b>" . $_ENV['_AAS32'] . "</b> on line <b>$_AAS71</b><br />\n"; break; case E_USER_WARNING: case E_WARNING: echo "<b>Warning</b>: $_AAS69 in <b>" . $_ENV['_AAS32'] . "</b> on line <b>$_AAS71</b><br />\n"; break; case E_USER_NOTICE: case E_NOTICE: case E_STRICT: break; default: echo "<b>Unknown error type $_AAS68</b>: $_AAS69 in <b>" . $_ENV['_AAS32'] . "</b> on line <b>$_AAS71<b><br />\n"; break; } } return true; } function _AAS50($_AAS74, $_AAS43) { switch (count($_AAS43)) { case 0: return $_AAS74(); break; case 1: return $_AAS74($_AAS43[0]); break; case 2: return $_AAS74($_AAS43[0], $_AAS43[1]); break; case 3: return $_AAS74($_AAS43[0], $_AAS43[1], $_AAS43[2]); break; case 4: return $_AAS74($_AAS43[0], $_AAS43[1], $_AAS43[2], $_AAS43[3]); break; case 5: return $_AAS74($_AAS43[0], $_AAS43[1], $_AAS43[2], $_AAS43[3], $_AAS43[4]); break; default: return call_user_func_array($_AAS74, $_AAS43); break; } } function _AAS37($_AAS75 = null) { _AAS72(); if ($_AAS75 !== null) { _AAS65($_AAS75); die("PHP sensor error: $_AAS75"); return; } die(); } function _AAS76($_AAS40, $_AAS77 = false) { $_AAS78 = realpath($_AAS40); if ($_AAS78 === false) { $_AAS79 = explode(PATH_SEPARATOR, ini_get("include_path")); foreach ($_AAS79 as $_AAS80) { if (($_AAS78 = realpath("$_AAS80/$_AAS40")) !== false) { break; } } } if ( $_AAS78 === false && $_AAS77 !== false && $_AAS40[0] !== "." && $_AAS40[0] !== "/" && $_AAS40[0] !== "\\" ) { $_AAS78 = realpath(dirname($_AAS77) . "/" . $_AAS40); } if ($_AAS78 === false) { return false; } return str_replace("\\", "/", $_AAS78); } function _AAS81($_AAS82, $_AAS83, $_AAS84, $_AAS85, $_AAS42, $_AAS40) { _AAS49("PHP_File_Include", "$_AAS40", $_AAS82, $_AAS83, "\"$_AAS42\" was called."); if ( strpos($_AAS40, _AAS7) !== false || strpos($_AAS40, _AAS8) !== false ) return $_AAS40; $_AAS78 = _AAS76($_AAS40, $_AAS82); if ($_AAS78 !== false) { $_AAS53 = _AAS86::_AAS87($_AAS78); } else { _AAS65("sensor has failed to find file \"$_AAS40\" included by \"$_AAS42\" from file \"$_AAS82\""); $_AAS53 = $_AAS40; $_AAS78 = $_AAS40; } $_AAS88 = in_array($_AAS78, $_ENV['_AAS13']); if (!$_AAS88) { array_push($_ENV['_AAS13'], $_AAS78); } return $_AAS53; } function _AAS89($_AAS40, $_AAS41, $_AAS90) { if (is_array($_AAS90) && count($_AAS90) >= 1) { _AAS49("PHP_Code_Eval", $_AAS90[0], $_AAS40, $_AAS41); return _AAS86::_AAS91($_AAS40, $_AAS41, $_AAS90[0]); } _AAS65("expected code argument for eval is missing in $_AAS40:$_AAS41"); return ""; } function _AAS92($_AAS40, $_AAS41, $_AAS74, $_AAS43) { if (!is_string($_AAS74)) { if (is_callable($_AAS74)) { return call_user_func_array($_AAS74, $_AAS43); } else { return false; } } if (array_key_exists($_AAS74, $_ENV['_AAS15'])) { $_AAS44 = $_ENV['_AAS15'][$_AAS74]; } else { $_AAS44 = false; } if ($_AAS44 === false) { return _AAS50($_AAS74, $_AAS43); } if ($_AAS44[2] !== false && function_exists($_AAS44[2])) { return $_AAS44[2]($_AAS40, $_AAS41, $_AAS74, $_AAS43, $_AAS44); } else { return _AAS66($_AAS40, $_AAS41, $_AAS74, $_AAS43, $_AAS44); } } function _AAS66($_AAS40, $_AAS41, $_AAS74, $_AAS43, $_AAS44) { $_AAS93 = true; $_AAS94 = array(); for ($_AAS95 = 0; $_AAS95 < count($_AAS43); $_AAS95++) { if ( $_AAS93 && ((is_string($_AAS43[$_AAS95]) && strpos($_AAS43[$_AAS95], _AAS7) !== false) || (is_string($_AAS43[$_AAS95]) && strpos($_AAS43[$_AAS95], _AAS8) !== false)) ) $_AAS93 = false; if (in_array($_AAS95 + 1, $_AAS44[1])) array_push($_AAS94, substr($_AAS43[$_AAS95], 0, 1024 * 1024)); } $_AAS46 = _AAS47(); if ($_AAS46 != "") $_AAS48 = array("\"$_AAS74\" was called.\r\n$_AAS46"); else $_AAS48 = array("\"$_AAS74\" was called."); for ($_AAS95 = 3; $_AAS95 < count($_AAS44); $_AAS95++) { if (isset($_AAS44[$_AAS95])) { array_push($_AAS48, $_AAS44[$_AAS95]); } } _AAS49($_AAS44[0], $_AAS94, $_AAS40, $_AAS41, $_AAS48); if ($_AAS93) return _AAS50($_AAS74, $_AAS43); return false; } function _AAS96($_AAS97, $_AAS74) { if (!is_object($_AAS97)) { return NULL; } $_AAS98 = @get_class($_AAS97); if ($_AAS98 === false) { return NULL; } $_AAS99 = &$_ENV["_AAS24"][strtolower($_AAS98)]; if ($_AAS99 === NULL) { return NULL; } return @$_AAS99[$_AAS74]; } function _AAS100($_AAS40, $_AAS41, $_AAS97, $_AAS74, $_AAS43) { $_AAS44 = _AAS96($_AAS97, $_AAS74); if($_AAS44 === NULL) { return call_user_func_array(array($_AAS97, $_AAS74), $_AAS43); } $_AAS93 = true; $_AAS94 = array(); for ($_AAS95 = 0; $_AAS95 < count($_AAS43); $_AAS95++) { if (in_array($_AAS95 + 1, $_AAS44[1])) { array_push($_AAS94, $_AAS43[$_AAS95]); } if ( $_AAS93 && (strpos($_AAS43[$_AAS95], _AAS7) !== false || strpos($_AAS43[$_AAS95], _AAS8) !== false) ) { $_AAS93 = false; break; } } $_AAS94 = array(); for ($_AAS95 = 0; $_AAS95 < count($_AAS43); $_AAS95++) { if (in_array($_AAS95 + 1, $_AAS44[1])) array_push($_AAS94, $_AAS43[$_AAS95]); } $_AAS46 = _AAS47(); if ($_AAS46 != "") $_AAS48 = array("\"$_AAS74\" member function was called.\r\n$_AAS46"); else $_AAS48 = array("\"$_AAS74\" member function was called."); for ($_AAS95 = 4; $_AAS95 < count($_AAS44); $_AAS95++) { if (isset($_AAS44[$_AAS95])) { array_push($_AAS48, $_AAS44[$_AAS95]); } } _AAS49($_AAS44[0], $_AAS94, $_AAS40, $_AAS41, $_AAS48); if ($_AAS93) { return call_user_func_array(array($_AAS97, $_AAS74), $_AAS43); } else { return false; } } function _AAS101($_AAS40, $_AAS41, $_AAS102, $_AAS103) { $_AAS44 = $_ENV["_AAS14"][$_AAS102]; if (isset($_AAS44)) { _AAS49("Var_Access", array($_AAS44[0], $_AAS103), $_AAS40, $_AAS41); } return $_AAS103; } function _AAS65($_AAS104) { error_log("PHP AcuSensor: " . $_AAS104); } function _AAS58($_AAS105) { if (_AAS3 && (_AAS4 & 2)) { return mb_strlen($_AAS105, 'latin1'); } else { return strlen($_AAS105); } } function _AAS49($_AAS106, $_AAS107, $_AAS108, $_AAS41, $_AAS109 = "") { $_AAS110 = ""; $_AAS110 .= sprintf("%08X%s", _AAS58($_AAS106), $_AAS106); if (is_array($_AAS107)) { $_AAS110 .= "a" . sprintf("%08X", count($_AAS107)); for ($_AAS95 = 0; $_AAS95 < count($_AAS107); $_AAS95++) { $_AAS110 .= sprintf("%08X%s", _AAS58($_AAS107[$_AAS95]), $_AAS107[$_AAS95]); } } elseif ($_AAS107 !== "") { $_AAS110 .= "s" . sprintf("%08X%s", _AAS58($_AAS107), $_AAS107); } else { $_AAS110 .= "n"; } $_AAS110 .= sprintf("%08X%s%08X", _AAS58($_AAS108), $_AAS108, $_AAS41); if (is_array($_AAS109)) { $_AAS110 .= "a" . sprintf("%08X", count($_AAS109)); for ($_AAS95 = 0; $_AAS95 < count($_AAS109); $_AAS95++) { $_AAS110 .= sprintf("%08X%s", _AAS58($_AAS109[$_AAS95]), $_AAS109[$_AAS95]); } } elseif ($_AAS109 !== "") { $_AAS110 .= "s" . sprintf("%08X%s", _AAS58($_AAS109), $_AAS109); } else { $_AAS110 .= "n"; } if (strlen($_ENV['_AAS12']) > 0x500000 ) { $_AAS1 = @tmpfile(); if ($_AAS1) { $_ENV['_AAS111'] = $_AAS1; fwrite($_ENV['_AAS111'], $_ENV['_AAS12']); $_ENV['_AAS12'] = ''; } } if (isset($_ENV['_AAS111']) && $_ENV['_AAS111']) { fwrite($_ENV['_AAS111'], $_AAS110); } else { $_ENV['_AAS12'] .= $_AAS110; } _AAS65("output: Key=$_AAS106"); } function _AAS72() {  if (isset($_ENV['_AAS111']) && $_ENV['_AAS111']) { @fseek($_ENV['_AAS111'], 0); echo (_AAS5); while (!feof($_ENV['_AAS111'])) { $_AAS112 = fread($_ENV['_AAS111'], 0xC00 ); if ($_AAS112) { echo (base64_encode($_AAS112)); } } echo (_AAS6); @fclose($_ENV['_AAS111']); unset($_ENV['_AAS111']); } else { $_AAS113 = _AAS58($_ENV['_AAS12']);  echo _AAS5 . base64_encode($_ENV['_AAS12']) . _AAS6; $_ENV['_AAS12'] = ""; } } function _AAS114($_AAS115, $_AAS116, $_AAS117) { $_AAS53 = array(); if ($_AAS116 <= 0 || $_AAS117 <= 0) { return $_AAS53; } if (substr($_AAS115, -1) != "/") $_AAS115 .= "/"; if (is_dir($_AAS115) && $_AAS118 = @opendir($_AAS115)) { $_AAS119 = $_AAS117; $_AAS120 = array(); while (($_AAS108 = readdir($_AAS118)) !== false && $_AAS119 > 0) { if (is_dir($_AAS115 . $_AAS108) && $_AAS116 > 1 && $_AAS108 != "." && $_AAS108 != "..") { array_push($_AAS120, $_AAS115 . $_AAS108 . "/"); } elseif (is_file($_AAS115 . $_AAS108) && ($_AAS108 !== $_ENV["_AAS33"])) { array_push($_AAS53, str_replace($_ENV['_AAS31'], "", $_AAS115 . $_AAS108)); $_AAS119--; } } if ($_AAS119 > 0) { foreach ($_AAS120 as $_AAS121) { $_AAS122 = _AAS114($_AAS121, $_AAS116 - 1, $_AAS119); $_AAS119 -= count($_AAS122); $_AAS53 = array_merge($_AAS53, $_AAS122); if ($_AAS119 <= 0) { break; } } } } return $_AAS53; } function _AAS123() { $_AAS124 = array(); if (($_AAS125 = ini_get('display_errors')) === '1' || strtolower($_AAS125) === 'stdout' ) array_push($_AAS124, 'display_errors=' . $_AAS125); if (ini_get('register_globals') === '1') array_push($_AAS124, 'register_globals_on=on'); if (ini_get('magic_quotes_gpc') !== '1' && ini_get('magic_quotes_gpc') !== false) array_push($_AAS124, 'magic_gpc_off=off'); if (ini_get('allow_url_fopen') === '1') array_push($_AAS124, 'allow_url_fopen_on=on'); if (ini_get('allow_url_include') === '1') array_push($_AAS124, 'allow_url_include_on=on'); if (ini_get('session.use_trans_sid') === '1') array_push($_AAS124, 'session.use_trans_sid_on=on'); if (ini_get('open_basedir') === '') array_push($_AAS124, 'open_basedir_not_set='); if ((ini_get('enable_dl') === '1') && (ini_get('safe_mode') === '1') ) array_push($_AAS124, 'enable_dl_safe_mode_on='); array_push($_AAS124, "php_version=" . phpversion()); if (count($_AAS124) > 0) _AAS49("Aspect_Alerts", $_AAS124, $_SERVER["SCRIPT_FILENAME"], 0); } function _AAS47($_AAS126 = true) { if (!function_exists("debug_backtrace")) { return ""; } $_AAS127 = debug_backtrace(); $_AAS128 = count($_AAS127) - 1; if ($_AAS126) { while ($_AAS128 >= 0 && $_AAS127[$_AAS128]["function"] === "eval") $_AAS128--; if ($_AAS128 <= 0) return ""; } $_AAS53 = ""; $_AAS103 = 1; for ($_AAS95 = 0; $_AAS95 <= $_AAS128; $_AAS95++) { if ( $_AAS126 && (strpos($_AAS127[$_AAS95]["function"], "_AAS") !== false || strpos($_AAS127[$_AAS95]["function"], "call_user_func_array") !== false) || strpos($_AAS127[$_AAS95]["function"], "call_user_method_array") !== false ) continue; $_AAS129 = isset($_AAS127[$_AAS95]["class"]) ? $_AAS127[$_AAS95]["class"] . "::" : ""; $_AAS74 = isset($_AAS127[$_AAS95]["function"]) ? $_AAS127[$_AAS95]["function"] : "[Unknown function]"; if (isset($_AAS127[$_AAS95]["args"])) { $_AAS74 .= "("; for ($_AAS130 = 0; $_AAS130 < count($_AAS127[$_AAS95]["args"]); $_AAS130++) { $_AAS131 = gettype($_AAS127[$_AAS95]["args"][$_AAS130]); $_AAS74 .= "[$_AAS131] "; switch ($_AAS131) { case "array": $_AAS74 .= "count=" . count($_AAS127[$_AAS95]["args"][$_AAS130]); break; case "object": $_AAS74 .= "class=" . get_class($_AAS127[$_AAS95]["args"][$_AAS130]); break; case "string": $_AAS74 .= "\"" . str_replace(array("\r\n", "\n", "\r"), array("\\n", "\\n", "\\n"), $_AAS127[$_AAS95]["args"][$_AAS130]) . "\""; break; case "boolean": $_AAS74 .= $_AAS127[$_AAS95]["args"][$_AAS130] ? "true" : "false"; break; default: $_AAS74 .= $_AAS127[$_AAS95]["args"][$_AAS130]; } if ($_AAS130 < count($_AAS127[$_AAS95]["args"]) - 1) $_AAS74 .= ", "; } $_AAS74 .= ")"; } else { $_AAS74 .= "()"; } $_AAS53 .= "  $_AAS103. $_AAS129$_AAS74"; $_AAS103++; if ($_AAS95 < $_AAS128) $_AAS53 .= "\r\n"; } if ($_AAS53 != "") return "Stack trace:\r\n" . $_AAS53; else return ""; } function _AAS132() { $_AAS55 = ""; foreach ($_GET as $_AAS106 => $_AAS133) { $_AAS55 .= rawurlencode($_AAS106) . "=" . rawurlencode($_AAS133) . "&"; } if ($_AAS55 != "") $_AAS55 = substr($_AAS55, 0, -1); return $_AAS55; }  class _AAS86 { private $_AAS134; private $_AAS135; private $_AAS136; public $_AAS137; public $_AAS138; private $_AAS139; private $_AAS140; private $_AAS141; public function __construct($_AAS134, $_AAS140) { $this->_AAS134 = str_replace("\\", "/", $_AAS134); $this->_AAS142 = dirname($_AAS134); $this->_AAS137 = ""; $this->_AAS138 = false; $this->_AAS139 = ""; $this->_AAS140 = $_AAS140; $this->_AAS141 = true; } private function _AAS143($_AAS144) { if (is_string($_AAS144)) { return $_AAS144; } else { switch ($_AAS144[0]) { case T_FILE: $this->_AAS138 = true; return '"' . $this->_AAS134 . '"'; break; case T_DIR: $this->_AAS138 = true; return '"' . $this->_AAS142 . '"'; break; case T_OPEN_TAG: if ($this->_AAS141 && $this->_AAS140) { $this->_AAS141 = false; return ""; } default: return $_AAS144[1]; } } } private function _AAS145(&$_AAS146) { $_AAS53 = "\""; $_AAS146++; while ($_AAS146 < $this->_AAS136) { $_AAS144 = $this->_AAS135[$_AAS146]; if (is_string($_AAS144)) { $_AAS53 .= $_AAS144; if ($_AAS144 == "\"") break; } else { $_AAS53 .= $_AAS144[1]; } $_AAS146++; } return $_AAS53; } private function _AAS147(&$_AAS146) { $_AAS42 = ""; $_AAS84 = ""; $_AAS85 = ""; $_AAS144 = $this->_AAS135[$_AAS146]; $_AAS41 = isset($_AAS144[2]) ? $_AAS144[2] : 0; switch ($_AAS144[0]) { case T_INCLUDE: $_AAS42 = "include"; $_AAS84 = "false"; $_AAS85 = "false"; break; case T_INCLUDE_ONCE: $_AAS42 = "include_once"; $_AAS84 = "false"; $_AAS85 = "true"; break; case T_REQUIRE: $_AAS42 = "require"; $_AAS84 = "true"; $_AAS85 = "false"; break; case T_REQUIRE_ONCE: $_AAS42 = "require_once"; $_AAS84 = "true"; $_AAS85 = "true"; break; } $_AAS148 = ""; $_AAS149 = 0; $_AAS150 = 0; $_AAS146++; while ($_AAS146 < $this->_AAS136) { $_AAS144 = $this->_AAS135[$_AAS146]; if ($_AAS144 === '(' || $_AAS144 === '[') { ++$_AAS149; } elseif ($_AAS144 === ')' || $_AAS144 === ']') { --$_AAS149; if ($_AAS149 < 0) { --$_AAS146; break; } } elseif ($_AAS144 === '?') { ++$_AAS150; } elseif ($_AAS144 === ':') { --$_AAS150; if ($_AAS150 < 0) { --$_AAS146; break; } } elseif ($_AAS144 === ';') { $_AAS146--; break; } elseif ($_AAS144 === ',') { if ($_AAS149 <= 0) { --$_AAS146; break; } } elseif (is_array($_AAS144)) { if ($_AAS144[0] === T_CLOSE_TAG) { $_AAS146--; break; } elseif ($_AAS144[0] === T_DOUBLE_ARROW) { if ($_AAS149 <= 0) { --$_AAS146; break; } } } $_AAS148 .= $this->_AAS151($_AAS146); $_AAS146++; } $this->_AAS138 = true; return "$_AAS42(_AAS81(\"$this->_AAS134\",$_AAS41,$_AAS84,$_AAS85,\"$_AAS42\",$_AAS148))"; } private function _AAS152(&$_AAS146) { while ($_AAS146 < $this->_AAS136) { $_AAS144 = $this->_AAS135[$_AAS146]; if (is_array($_AAS144) && ($_AAS144[0] === T_COMMENT || $_AAS144[0] === T_ML_COMMENT || $_AAS144[0] === T_DOC_COMMENT || $_AAS144[0] === T_WHITESPACE)) $_AAS146++; else break; } } private function _AAS153(&$_AAS146, $_AAS154, $_AAS155, &$_AAS156, &$_AAS103) { $_AAS103 = ""; $_AAS156 = true; $_AAS157 = $_AAS146; $_AAS158 = 1; while ($_AAS157 < $this->_AAS136) { $_AAS144 = $this->_AAS135[$_AAS157]; if ($_AAS144 === $_AAS154) $_AAS158++; if ($_AAS144 === $_AAS155) $_AAS158--; if ($_AAS158 <= 0) break; if ($_AAS144 === ";") { return false; } else { if ( is_array($_AAS144) && $_AAS144[0] !== T_COMMENT && $_AAS144[0] !== T_ML_COMMENT && $_AAS144[0] !== T_DOC_COMMENT && $_AAS144[0] !== T_WHITESPACE && $_AAS144[0] !== T_CONSTANT_ENCAPSED_STRING ) $_AAS156 = false; $_AAS103 .= $this->_AAS151($_AAS157); } $_AAS157++; } $_AAS146 = $_AAS157; return true; } private function _AAS159(&$_AAS146, &$_AAS160) { $_AAS160 = ""; $_AAS146++; $_AAS158 = 1; while ($_AAS146 < $this->_AAS136) { $_AAS144 = $this->_AAS135[$_AAS146]; if ($_AAS144 === "(") $_AAS158++; elseif ($_AAS144 === ")") $_AAS158--; if ($_AAS158 <= 0) break; $_AAS160 .= $this->_AAS151($_AAS146); $_AAS146++; } return true; } private function _AAS161($_AAS146) { $_AAS144 = $this->_AAS135[$_AAS146]; return isset($_AAS144[2]) ? $_AAS144[2] : 0; } private function _AAS162(&$_AAS146, $_AAS42) { $_AAS41 = $this->_AAS161($_AAS146); $_AAS157 = $_AAS146 + 1; $this->_AAS152($_AAS157); $_AAS144 = $this->_AAS135[$_AAS157]; if ($_AAS144 === "(") { if (array_key_exists($_AAS42, $_ENV["_AAS15"])) { $_AAS43 = ""; $_AAS163 = $this->_AAS159($_AAS157, $_AAS43); if ($_AAS163) { $_AAS146 = $_AAS157; $this->_AAS138 = true; return "_AAS92(\"$this->_AAS134\",$_AAS41,\"$_AAS42\",Array($_AAS43))"; } else { return $_AAS42; } } return $_AAS42; } elseif (is_array($_AAS144) && $_AAS144[0] === T_DOUBLE_COLON) { ++$_AAS157; $this->_AAS152($_AAS157); $_AAS144 = $this->_AAS135[$_AAS157]; if (is_array($_AAS144) && $_AAS144[0] = T_STRING) { $_AAS129 = $_AAS42; $_AAS164 = $_AAS144[1]; $_AAS146 = $_AAS157; return $this->_AAS162($_AAS146, "$_AAS129::$_AAS164"); } } return $_AAS42; } private function _AAS165(&$_AAS146) { $_AAS53 = 'function '; $_AAS146++; $this->_AAS152($_AAS146); $_AAS158 = -1; while ($_AAS146 < $this->_AAS136) { $_AAS144 = $this->_AAS135[$_AAS146]; if ($_AAS144 === '(') { $_AAS158++; if ($_AAS158 == 0) $_AAS158 = 1; } elseif ($_AAS144 == ')' && --$_AAS158 == 0) { return $_AAS53 . ')'; } if (is_array($_AAS144)) $_AAS53 .= $_AAS144[1]; else $_AAS53 .= $_AAS144; $_AAS146++; } } private function _AAS166(&$_AAS146, $_AAS167) { $_AAS146++; $_AAS53 = "$_AAS167"; while ($_AAS146 < $this->_AAS136) { $_AAS144 = $this->_AAS135[$_AAS146]; $_AAS53 .= $this->_AAS143($_AAS144); if (!is_array($_AAS144)) { break; } elseif ($_AAS144[0] !== T_WHITESPACE) { break; } $_AAS146++; } return $_AAS53; } private function _AAS168($_AAS169) { $_AAS53 = ""; for ($_AAS95 = 0; $_AAS95 < _AAS58($_AAS169); $_AAS95++) { switch ($_AAS169[$_AAS95]) { case "\\": $_AAS53 .= "\\\\"; break; case "$": $_AAS53 .= "\\\$"; break; default: $_AAS53 .= $_AAS169[$_AAS95]; } } return $_AAS53; } private function _AAS170(&$_AAS146) { $_AAS144 = $this->_AAS135[$_AAS146]; $_AAS53 = $_AAS144[1]; $_AAS41 = isset($_AAS144[2]) ? $_AAS144[2] : 0; $_AAS157 = $_AAS146 + 1; $this->_AAS152($_AAS157); while ($_AAS157 < $this->_AAS136) { $_AAS144 = $this->_AAS135[$_AAS157]; if ($_AAS144 === "{" || $_AAS144 === "[") { $_AAS157++; $_AAS156 = false; $_AAS103 = ""; $_AAS155 = ($_AAS144 === "{") ? "}" : "]"; $_AAS171 = $this->_AAS153($_AAS157, $_AAS144, $_AAS155, $_AAS156, $_AAS103); if (array_key_exists($_AAS53, $_ENV["_AAS14"])) { $_AAS44 = $_ENV["_AAS14"][$_AAS53]; } else { $_AAS44 = false; } if ($_AAS171 && isset($_AAS44) && $_AAS44 !== false) { if ($_AAS156) _AAS49("Var_Reference", array($_AAS44[0], trim($_AAS103, "\"'")), $this->_AAS134, $_AAS41); $this->_AAS138 = true; $_AAS53 .= "[_AAS101(\"$this->_AAS134\", $_AAS41, \"" . $this->_AAS168($_AAS53) . "\", $_AAS103)]"; $_AAS146 = $_AAS157; } elseif ($_AAS171) { $_AAS53 .= "[$_AAS103]"; $_AAS146 = $_AAS157; } else { $_AAS146 = $_AAS157 - 1; break; } } elseif ($_AAS144 === "(") { $_AAS160 = ""; $_AAS172 = $this->_AAS159($_AAS157, $_AAS160); if ($_AAS172) { $this->_AAS138 = true; $_AAS53 = "_AAS92(\"$this->_AAS134\",$_AAS41,$_AAS53,Array($_AAS160))"; $_AAS146 = $_AAS157; } else { $_AAS53 .= "("; $_AAS146 = $_AAS157; } break; } elseif (is_array($_AAS144) && $_AAS144[0] === T_OBJECT_OPERATOR) { $_AAS157++; $this->_AAS152($_AAS157); $_AAS144 = $this->_AAS135[$_AAS157]; if (is_array($_AAS144) && $_AAS144[0] === T_STRING) { $_AAS42 = $_AAS144[1]; $this->_AAS152($_AAS157); $_AAS157++; $_AAS144 = $this->_AAS135[$_AAS157]; if ($_AAS144 === "(") { $_AAS160 = ""; $_AAS163 = $this->_AAS159($_AAS157, $_AAS160); if ($_AAS163) { if ($_AAS53 != '$this' && array_key_exists($_AAS42, $_ENV["_AAS25"])) { $this->_AAS138 = true; $_AAS53 = "_AAS100(\"$this->_AAS134\",$_AAS41,$_AAS53,\"$_AAS42\",Array($_AAS160))"; } else { $_AAS53 .= "->$_AAS42($_AAS160)"; } $_AAS146 = $_AAS157; } else { $_AAS53 .= "->$_AAS42"; } } else { break; } } else { break; } } else { break; } $_AAS157++; } return $_AAS53; } private function _AAS173(&$_AAS146) { $_AAS144 = $this->_AAS135[$_AAS146]; $_AAS53 = "eval"; if ($this->_AAS140) { return $_AAS53; } $_AAS41 = isset($_AAS144[2]) ? $_AAS144[2] : 0; $_AAS157 = $_AAS146 + 1; $this->_AAS152($_AAS157); $_AAS144 = $this->_AAS135[$_AAS157]; if ($_AAS144 === "(") { $_AAS43 = ""; $_AAS163 = $this->_AAS159($_AAS157, $_AAS43); if ($_AAS163) { $_AAS146 = $_AAS157; $this->_AAS138 = true; $_AAS53 .= "(_AAS89(\"$this->_AAS134\", $_AAS41, Array($_AAS43)))"; } } return $_AAS53; } private function _AAS174(&$_AAS146) { $_AAS53 = "_AAS37"; $_AAS146++; $this->_AAS152($_AAS146); if ($this->_AAS135[$_AAS146] !== "(") { $this->_AAS138 = true; $_AAS53 .= "()"; } $_AAS146--; return $_AAS53; } private function _AAS175(&$_AAS146) { if ($this->_AAS139 !== '') return 'namespace'; $_AAS157 = $_AAS146 + 1; $this->_AAS152($_AAS157); while ($_AAS157 < $this->_AAS136) { $_AAS144 = $this->_AAS135[$_AAS157]; if ($_AAS144 === '{') { $this->_AAS139 = '{'; break; } if ( is_array($_AAS144) && ($_AAS144[0] === T_STRING || $_AAS144[0] === T_NS_SEPARATOR) ) { $_AAS157++; continue; } if ( is_array($_AAS144) && ($_AAS144[0] === T_WHITESPACE || $_AAS144[0] === T_COMMENT) ) { $this->_AAS152($_AAS157); continue; } break; } return 'namespace'; } private function _AAS151(&$_AAS146) { $_AAS53 = ""; $_AAS144 = $this->_AAS135[$_AAS146]; if (is_string($_AAS144)) { switch ($_AAS144) { case "\"": $_AAS53 = $this->_AAS145($_AAS146); break; default: $_AAS53 .= $this->_AAS143($_AAS144); } } else { switch ($_AAS144[0]) { case T_INCLUDE: case T_INCLUDE_ONCE: case T_REQUIRE: case T_REQUIRE_ONCE: $_AAS53 .= $this->_AAS147($_AAS146); break; case T_VARIABLE: $_AAS53 .= $this->_AAS170($_AAS146); break; case T_FUNCTION: $_AAS53 .= $this->_AAS165($_AAS146); break; case T_NEW: $_AAS53 .= $this->_AAS166($_AAS146, "new"); break; case T_CLASS: $_AAS53 .= $this->_AAS166($_AAS146, "class"); break; case T_DOUBLE_COLON: $_AAS53 .= $this->_AAS166($_AAS146, "::"); break; case T_OBJECT_OPERATOR: $_AAS53 .= $this->_AAS166($_AAS146, "->"); break; case T_EXTENDS: $_AAS53 .= $this->_AAS166($_AAS146, "extends"); break; case T_STRING: $_AAS53 .= $this->_AAS162($_AAS146, $_AAS144[1]); break; case T_WHITESPACE: $_AAS53 .= $this->_AAS143($_AAS144); break; case T_EVAL: $_AAS53 .= $this->_AAS173($_AAS146); break; case T_EXIT: $_AAS53 .= $this->_AAS174($_AAS146); break; case T_HALT_COMPILER: $_AAS146 = $this->_AAS136; break; case T_START_HEREDOC: case T_END_HEREDOC: $_AAS53 .= $this->_AAS143($_AAS144[1]); break; case T_NAMESPACE: $_AAS53 .= $this->_AAS175($_AAS146); break; case T_OPEN_TAG: case T_CLOSE_TAG: $_AAS53 .= $this->_AAS143($_AAS144); break; default: $_AAS53 .= $this->_AAS143($_AAS144); } } return $_AAS53; } public function _AAS176($_AAS177, $_AAS178) { $this->_AAS135 = token_get_all( $this->_AAS140 ? '<?php ' . $_AAS177 : $_AAS177 ); $this->_AAS136 = count($this->_AAS135); for ($_AAS95 = 0; $_AAS95 < $this->_AAS136; ++$_AAS95) { $this->_AAS137 .= $this->_AAS151($_AAS95); } if ($_AAS178 !== false) { if ($_AAS1 = @fopen($_AAS178, "w+")) { _AAS65("transformed \"$this->_AAS134\" -> \"$_AAS178\""); @fwrite($_AAS1, $this->_AAS137); @fclose($_AAS1); } else { _AAS65("unable to create cache file"); _AAS37("writing injected code failed"); } return $_AAS178; } else { return $this->_AAS137; } } public static function _AAS87($_AAS40) { _AAS65("processing file \"$_AAS40\""); $_AAS179 = md5_file($_AAS40); if ($_AAS179 === false) { _AAS37("unable to access \"$_AAS40\" contents"); } $_AAS180 = $_ENV['_AAS34'] . "_AAS181" . md5(_AAS9 . $_AAS179 . $_AAS40); if (file_exists($_AAS180)) { _AAS65("using existing \"$_AAS180\" for \"$_AAS40\""); return $_AAS180; } $_AAS182 = new _AAS86($_AAS40, false); $_AAS182->_AAS176( file_get_contents($_AAS40), $_AAS180 ); return $_AAS180; } public static function _AAS91($_AAS40, $_AAS41, $_AAS183) { $_AAS182 = new _AAS86($_AAS40, true); return $_AAS182->_AAS176($_AAS183, false); } }  function _AAS184($_AAS40) { if (!preg_match('/[\/\\\\]installed\.json$/', $_AAS40, $_AAS185)) { return; } $_AAS186 = @file_get_contents($_AAS40); if (!$_AAS186) { return; } $_AAS187 = json_decode($_AAS186, true); if (!$_AAS187) { return; } if (!is_array($_AAS187)) { return; } if (!array_key_exists("packages", $_AAS187)) { return; } $_AAS188 = array(); foreach ($_AAS187["packages"] as $_AAS189) { $_AAS28 = @$_AAS189["name"]; $_AAS190 = @$_AAS189["version_normalized"]; if ($_AAS28 && $_AAS190) { $_AAS188[$_AAS28 . "@" . $_AAS190] = true; } } return array_keys($_AAS188); } function _AAS191($_AAS192, $_AAS193) { return $_AAS192; } if ($_ENV["_AAS0"]) { set_error_handler("_AAS67"); _AAS65("Called with ".$_SERVER["REQUEST_METHOD"]." method for URI: ".$_SERVER["REQUEST_URI"]); _AAS49("PONG", "", "", 0); _AAS49("sv", "php-".$_ENV["_AAS10"], "", 0); if (isset($_SERVER["HTTP_ACUNETIX_ASPECT_QUERIES"])) { $_AAS194 = array(); foreach (explode(";", $_SERVER["HTTP_ACUNETIX_ASPECT_QUERIES"]) as $_AAS195) { $_AAS194[strtolower(trim($_AAS195))] = true; } if ($_AAS194["aspectalerts"]) { _AAS123(); } $_AAS196 = null; if ($_AAS194["filelist"]) { $_AAS196 = _AAS114($_ENV['_AAS31'], 10, 10000); _AAS49("File_List", $_AAS196, $_ENV['_AAS32'], 0); } if ($_AAS194["packages"]) { if (!$_AAS196) { $_AAS196 = _AAS114($_ENV['_AAS31'], 10, 10000); } foreach ($_AAS196 as $_AAS40) { $_AAS188 = _AAS184($_AAS40); if ($_AAS188) { _AAS49("Packages", $_AAS188, $_AAS40, 0, "composer"); } } } } if (isset($_SERVER["REDIRECT_STATUS"]) && isset($_SERVER["REDIRECT_URL"]) && $_SERVER["REDIRECT_STATUS"] == 200){ _AAS49("Script_Name", $_SERVER["SCRIPT_NAME"], $_ENV['_AAS32'], 0); if (count($_GET)>0) _AAS49("Script_Query", _AAS132(), $_ENV['_AAS32'], 0); } array_push($_ENV['_AAS13'], $_ENV['_AAS32']); ob_start("_AAS191", 0, 0); _AAS72(); require _AAS86::_AAS87($_ENV['_AAS32']); _AAS37(); } __halt_compiler();
9973882939a19e9df93cd4761cd981af